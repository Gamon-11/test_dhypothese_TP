theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(title = "Représentation de la densité lissée de la variable Poids\n",
x = "Poids (en kg)",
y = "Densité")
data %>%
ggdensity(x = "Poids",
fill = "pink",
alpha = 0.4)+
scale_x_continuous(limits = c(80,120))+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(title = "Représentation de la densité lissée de la variable Poids\n",
x = "Poids en kg",
y = "Densité")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
pull(Poids) %>%
shapiro.test(x=.)
data %>%
pull(Poids) %>%
t.test(x=.,
alternative = "less",
mu = 100)
data %>%
pull(Poids) %>%
Mean.test(x=.,
mu0 = 100,
sigma = NULL,
alternative = "less",
alpha = 0.05,
plot = TRUE) #greater pour sup à u
data %>%
t_test(data = .,
formula = Poids ~ 1,
alternative = "less",
mu = 100,
conf.level = 0.95) -> result3
print(result3)
data %>%  ggplot(mapping = aes(y = Poids,
x = NA))+
geom_boxplot(width = 0.5,
fill = "lightblue")+
geom_jitter(width = 0.12,
colour = "red")+
stat_summary(fun = "mean",
geom = "point",
color = "black",
fill = "purple",
shape = 21,
size = 2)+
stat_summary(fun = "mean",
colour = "black",
geom = "text",
vjust = +0.5,
hjust = -0.7,
mapping = aes(label = round(after_stat(y),
digits = 1)))+
scale_y_continuous(limits = c(87,105))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5,
face = "bold"),
plot.subtitle = element_text(hjust = 0.5))+
labs(title = "Distribution de la variable sous la forme d'un box plot")
data %>%
mutate(y = NA) %>%
ggboxplot(x = "y",
y = "Poids",
width = 0.5,
fill = "lightblue",
add = c("jitter"),
add.params = list(color = c("red")),
ylab = "poids exprimé en kilogramme")+
stat_mean(geom = "point",
color = "black",
fill = "purple",
shape = 21,
size = 2)+
stat_mean(colour = "black",
geom = "text",
vjust = +0.5,
hjust = -0.7,
mapping = aes(label = round(after_stat(y),
digits = 1)))+
scale_y_continuous(limits = c(87,105))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5,
face = "bold"),
plot.subtitle = element_text(hjust = 0.5))+
labs(title = "Distribution de la variable sous la forme d'un boxplot\n",
subtitle = get_test_label(stat.test = result3,
detailed = TRUE),
x= NULL)
readLines("../Data/data1.csv",n=5)
data = read.table("../Data/data1.csv", sep = ",", header = TRUE)
head(data)
str(data)
data %>%
mutate(Gender = factor(Gender)) %>% str()
data %>%
get_summary_stats()
set.seed(seed = 125)
data %>%
sample_n(size = 40,
replace = FALSE) -> sample
print(sample)
sample %>%
get_summary_stats()
sample %>%
ggdensity(x = "Weight",
fill = "pink",
alpha = 0.4)+
scale_x_continuous(limits = c(20,180))+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(title = "Représentation de la densité lissée de la variable Poids\n",
x = "Poids en kg",
y = "Densité")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
pull(Weight) %>%
shapiro.test(x=.)
mu_0 = 100
alpha = 0.05
sample %>%
summarize(W = sqrt(length(Weight))*(mean(Weight)-mu_0)/sd(Weight)) %>%
mutate(Critical_Value = qnorm(p=1-alpha),
p_value = 1-pnorm(W))
sample %>%
pull(Weight) %>%
t.test(x=.,
alternative = "less",
mu = 100)
data %>%
mutate(y = NA) %>%
ggboxplot(x = "y",
y = "Poids",
width = 0.5,
fill = "lightblue",
add = c("jitter"),
add.params = list(color = c("red")),
ylab = "poids exprimé en kilogramme")+
stat_mean(geom = "point",
color = "black",
fill = "purple",
shape = 21,
size = 2)+
stat_mean(colour = "black",
geom = "text",
vjust = +0.5,
hjust = -0.7,
mapping = aes(label = round(after_stat(y),
digits = 1)))+
scale_y_continuous(limits = c(87,105))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5,
face = "bold"),
plot.subtitle = element_text(hjust = 0.5))+
labs(title = "Distribution de la variable sous la forme d'un boxplot\n",
subtitle = get_test_label(stat.test = result3,
detailed = TRUE),
x= NULL)
library(dplyr)
library(ggplot2)
library(LearningStats)
library(report)
library(ggpubr)
library(rstatix)
readLines("../Data/Etude_fibre.csv",n=5)
data = read.table("../Data/Etude_fibre.csv", sep = ";", header = TRUE)
head(data)
str(data)
data %>%
summary()
data %>%
ggplot(mapping = aes(x = Poids))+
geom_density(fill = "darkblue",
alpha = 0.4)+
scale_x_continuous(limits = c(80,120))+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(title = "Représentation de la densité lissée de la variable Poids\n",
x = "Poids (en kg)",
y = "Densité")
data %>%
ggdensity(x = "Poids",
fill = "pink",
alpha = 0.4)+
scale_x_continuous(limits = c(80,120))+
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(title = "Représentation de la densité lissée de la variable Poids\n",
x = "Poids en kg",
y = "Densité")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
pull(Poids) %>%
shapiro.test(x=.)
data %>%
pull(Poids) %>%
t.test(x=.,
alternative = "less",
mu = 100)
data %>%
pull(Poids) %>%
Mean.test(x=.,
mu0 = 100,
sigma = NULL,
alternative = "less",
alpha = 0.05,
plot = TRUE) #greater pour sup à u
data %>%
t_test(data = .,
formula = Poids ~ 1,
alternative = "less",
mu = 100,
conf.level = 0.95) -> result3
print(result3)
data %>%
pull(Poids) %>%
Mean.test(x=.,
mu0 = 100,
sigma = NULL,
alternative = "less",
alpha = 0.05,
plot = TRUE) #greater pour sup à u
data %>%
t_test(data = .,
formula = Poids ~ 1,
alternative = "less",
mu = 100,
conf.level = 0.95) -> result3
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
pull(Poids) %>%
shapiro.test(x=.)
data %>%
pull(Poids) %>%
t.test(x=.,
alternative = "less",
mu = 100)
data %>%
pull(Poids) %>%
Mean.test(x=.,
mu0 = 100,
sigma = NULL,
alternative = "less",
alpha = 0.05,
plot = TRUE) #greater pour sup à u
data %>%
pull(Poids) %>%
Mean.test(x=.,
mu0 = 100,
sigma = NULL,
alternative = "less",
alpha = 0.05,
plot = TRUE,
title = "Zone de rejet") #greater pour sup à u
data %>%
pull(Poids) %>%
shapiro.test(x=.)
sample %>%
pull(Weight) %>%
shapiro.test(x=.)
mu_0 = 100
alpha = 0.05
sample %>%
summarize(W = sqrt(length(Weight))*(mean(Weight)-mu_0)/sd(Weight)) %>%
mutate(Critical_Value = qnorm(p=1-alpha),
p_value = 1-pnorm(W))
sample %>%
pull(Weight) %>%
t.test(x=.,
alternative = "less",
mu = 100)
sample %>%
pull(Weight) %>%
t.test(x=.,
alternative = "less",
mu = 100) -> resu
print(resu)
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "pink",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "pink",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red4",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "pink",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "pink4",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
sample %>%
ggqqplot(data = .,
x = "Weight",
color = "pink",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red4",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "red",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "blue4",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "darkblue",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "darkblue",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
data %>%
ggqqplot(data = .,
x = "Poids",
color = "blue",
conf.int = TRUE,
conf.int.level = 0.95,
title = "Q-Q plot pour la variable poids\n",
y = "Poids des patients",
ggtheme = theme_minimal())+
geom_qq(color = "black")+ #couleur des points
geom_qq_line(color = "blue4",
linewidth = 1.2)+
theme(plot.title = element_text(hjust = 0.5,
face = "bold"))+
labs(x = "Quantilles théoriques")
